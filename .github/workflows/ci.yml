name: Backend CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  checks: write

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --quiet --eval 'db.runCommand({ ping: 1 })' || exit 1"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: maven
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Wait for MongoDB
      run: |
        for i in {1..60}; do
          if (echo > /dev/tcp/127.0.0.1/27017) >/dev/null 2>&1; then
            echo "MongoDB is up"; exit 0; fi; sleep 1; done
        echo "MongoDB did not start in time"; exit 1
        
    - name: Run tests
      run: mvn -B clean test
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build application
      run: mvn -B clean package -DskipTests
      
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-jar
        path: target/*.jar
        retention-days: 30
